# This is the CMakeCache file.
# For build in directory: /Users/jared/BitWeb/core
# It was generated by CMake: /opt/homebrew/Cellar/cmake/3.24.1/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
BDBXX_INCLUDE_DIR:PATH=BDBXX_INCLUDE_DIR-NOTFOUND

//Path to a library.
BDBXX_LIBRARY:FILEPATH=BDBXX_LIBRARY-NOTFOUND

//Path to a program.
BREW:FILEPATH=/opt/homebrew/bin/brew

//Build benchmarks
BUILD_BITCOIN_BENCH:BOOL=ON

//Build bitcoin-cli
BUILD_BITCOIN_CLI:BOOL=ON

//Build bitcoin-miner
BUILD_BITCOIN_MINER:BOOL=ON

//Build bitcoin-tx
BUILD_BITCOIN_TX:BOOL=ON

//Activate the wallet functionality
BUILD_BITCOIN_WALLET:BOOL=ON

//Activate the ZeroMQ functionalities
BUILD_BITCOIN_ZMQ:BOOL=ON

//Value Computed by CMake
BitcoinSV_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src

//Value Computed by CMake
BitcoinSV_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
BitcoinSV_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src

Boost_CHRONO_LIBRARY_RELEASE:STRING=/opt/homebrew/lib/libboost_chrono-mt.dylib

//The directory containing a CMake configuration file for Boost.
Boost_DIR:PATH=/opt/homebrew/lib/cmake/Boost-1.80.0

Boost_FILESYSTEM_LIBRARY_RELEASE:STRING=/opt/homebrew/lib/libboost_filesystem-mt.dylib

//Path to a file.
Boost_INCLUDE_DIR:PATH=/opt/homebrew/include

Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE:STRING=/opt/homebrew/lib/libboost_program_options-mt.dylib

Boost_THREAD_LIBRARY_RELEASE:STRING=/opt/homebrew/lib/libboost_thread-mt.dylib

Boost_UNIT_TEST_FRAMEWORK_LIBRARY_RELEASE:STRING=/opt/homebrew/lib/libboost_unit_test_framework-mt.dylib

//Path to a program.
CCACHE:FILEPATH=CCACHE-NOTFOUND

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=-I/opt/homebrew/Cellar/berkeley-db/18.1.40_1/include

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=-L/opt/homebrew/opt/berkeley-db/lib

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/jared/BitWeb/core/CMakeFiles/pkgRedirects

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=-L/opt/homebrew/opt/berkeley-db/lib

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=BitcoinSV

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.1.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=-L/opt/homebrew/opt/berkeley-db/lib

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Use assembly version of crypto primitives
CRYPTO_USE_ASM:BOOL=ON

//Enable production build
ENABLE_PROD_BUILD:BOOL=OFF

//Path to a file.
EVENT_INCLUDE_DIR:PATH=/opt/homebrew/include

//Path to a library.
EVENT_LIBRARY:FILEPATH=/opt/homebrew/lib/libevent.dylib

//Path to a library.
EVENT_PTHREAD_LIBRARY:FILEPATH=/opt/homebrew/lib/libevent_pthreads.dylib

//Enable extra warnings
EXTRA_WARNINGS:BOOL=OFF

//Path to a library.
GMPXX_LIBRARY:FILEPATH=GMPXX_LIBRARY-NOTFOUND

//Path to a file.
GMP_INCLUDE_DIR:PATH=GMP_INCLUDE_DIR-NOTFOUND

//Path to a library.
GMP_LIBRARY:FILEPATH=GMP_LIBRARY-NOTFOUND

//Build LevelDB's unit tests
LEVELDB_BUILD_TESTS:BOOL=ON

//Value Computed by CMake
Leveldb_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src/leveldb

//Value Computed by CMake
Leveldb_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
Leveldb_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src/leveldb

//Path to the native binary directory
NATIVE_BINARY_DIR:PATH=/Users/jared/BitWeb/core/native/bin

//Path to the native build directory
NATIVE_BUILD_DIR:PATH=/Users/jared/BitWeb/core/native

//Path to a library.
OPENSSL_CRYPTO_LIBRARY:FILEPATH=/opt/homebrew/opt/openssl@3/lib/libcrypto.dylib

//Path to a file.
OPENSSL_INCLUDE_DIR:PATH=/opt/homebrew/opt/openssl@3/include

//Path to a library.
OPENSSL_SSL_LIBRARY:FILEPATH=/opt/homebrew/opt/openssl@3/lib/libssl.dylib

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/opt/homebrew/bin/pkg-config

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/opt/homebrew/bin/python3

//Build secp256k1's unit tests
SECP256K1_BUILD_TEST:BOOL=ON

//Precompute libsecp256k1's eliptic curve mutliplication tables
SECP256K1_ECMULT_STATIC_PRECOMPUTATION:BOOL=ON

//Enable secp256k1's efficiently computable endomorphism
SECP256K1_ENABLE_ENDOMORPHISM:BOOL=ON

//Build libsecp256k1's ECDH module
SECP256K1_ENABLE_MODULE_ECDH:BOOL=OFF

//Build libsecp256k1's MULTISET module
SECP256K1_ENABLE_MODULE_MULTISET:BOOL=ON

//Build libsecp256k1's recovery module
SECP256K1_ENABLE_MODULE_RECOVERY:BOOL=ON

//Build univalue's unit tests
UNIVALUE_BUILD_TESTS:BOOL=ON

//Value Computed by CMake
bitcoin-test_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src/test

//Value Computed by CMake
bitcoin-test_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
bitcoin-test_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src/test

//Dependencies for the target
bitcoinconsensus_LIB_DEPENDS:STATIC=general;common;

//The directory containing a CMake configuration file for boost_atomic.
boost_atomic_DIR:PATH=/opt/homebrew/lib/cmake/boost_atomic-1.80.0

//The directory containing a CMake configuration file for boost_chrono.
boost_chrono_DIR:PATH=/opt/homebrew/lib/cmake/boost_chrono-1.80.0

//The directory containing a CMake configuration file for boost_filesystem.
boost_filesystem_DIR:PATH=/opt/homebrew/lib/cmake/boost_filesystem-1.80.0

//The directory containing a CMake configuration file for boost_headers.
boost_headers_DIR:PATH=/opt/homebrew/lib/cmake/boost_headers-1.80.0

//The directory containing a CMake configuration file for boost_program_options.
boost_program_options_DIR:PATH=/opt/homebrew/lib/cmake/boost_program_options-1.80.0

//The directory containing a CMake configuration file for boost_thread.
boost_thread_DIR:PATH=/opt/homebrew/lib/cmake/boost_thread-1.80.0

//The directory containing a CMake configuration file for boost_unit_test_framework.
boost_unit_test_framework_DIR:PATH=/opt/homebrew/lib/cmake/boost_unit_test_framework-1.80.0

//Dependencies for the target
common_LIB_DEPENDS:STATIC=general;util;general;secp256k1;

//Value Computed by CMake
crypto_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src/crypto

//Value Computed by CMake
crypto_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
crypto_LIB_DEPENDS:STATIC=general;/opt/homebrew/opt/openssl@3/lib/libcrypto.dylib;

//Value Computed by CMake
crypto_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src/crypto

//Use clang/gcc address sanitizer
enable_asan:BOOL=OFF

//Enable debug (lockorder)
enable_debug:BOOL=OFF

//Enable metrics
enable_metrics:BOOL=OFF

//Use clang static analyzer
enable_static_analyzer:BOOL=OFF

//Use clang thread sanitizer
enable_tsan:BOOL=OFF

//Use clang/gcc undefined behaviour sanitizer
enable_ubsan:BOOL=OFF

//Dependencies for the target
leveldb_LIB_DEPENDS:STATIC=general;leveldb-sse4.2;

//Dependencies for the target
leveldb_test_base_LIB_DEPENDS:STATIC=general;leveldb;

//Value Computed by CMake
secp256k1_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src/secp256k1

//Value Computed by CMake
secp256k1_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
secp256k1_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src/secp256k1

//Dependencies for the target
server_LIB_DEPENDS:STATIC=general;/opt/homebrew/lib/libevent.dylib;general;bitcoinconsensus;general;leveldb;general;memenv;general;/opt/homebrew/lib/libevent_pthreads.dylib;

//Value Computed by CMake
univalue_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src/univalue

//Value Computed by CMake
univalue_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
univalue_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src/univalue

//Dependencies for the target
util_LIB_DEPENDS:STATIC=general;univalue;general;crypto;general;Boost::chrono;general;Boost::filesystem;general;Boost::program_options;general;Boost::thread;

//Value Computed by CMake
wallet_BINARY_DIR:STATIC=/Users/jared/BitWeb/core/src/wallet

//Value Computed by CMake
wallet_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
wallet_SOURCE_DIR:STATIC=/Users/jared/BitWeb/core/src/wallet


########################
# INTERNAL cache entries
########################

//Test BOOST_TEST_DYN_LINK
BOOST_TEST_DYN_LINK:INTERNAL=1
//ADVANCED property for variable: Boost_DIR
Boost_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/jared/BitWeb/core
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=24
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.24.1/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.24.1/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.24.1/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.24.1/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/jared/BitWeb/core
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=10
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/opt/homebrew/Cellar/cmake/3.24.1/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test ENABLE_HWCRC32
ENABLE_HWCRC32:INTERNAL=
//ADVANCED property for variable: EVENT_INCLUDE_DIR
EVENT_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EVENT_LIBRARY
EVENT_LIBRARY-ADVANCED:INTERNAL=1
//Details about finding Boost
FIND_PACKAGE_MESSAGE_DETAILS_Boost:INTERNAL=[/opt/homebrew/lib/cmake/Boost-1.80.0/BoostConfig.cmake][cfound components: unit_test_framework ][v1.80.0(1.58)]
//Details about finding Event
FIND_PACKAGE_MESSAGE_DETAILS_Event:INTERNAL=[/opt/homebrew/include][/opt/homebrew/lib/libevent.dylib][v()]
//Details about finding OpenSSL
FIND_PACKAGE_MESSAGE_DETAILS_OpenSSL:INTERNAL=[/opt/homebrew/opt/openssl@3/lib/libcrypto.dylib][/opt/homebrew/opt/openssl@3/include][c ][v3.0.5()]
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[/opt/homebrew/bin/python3][v3.10.8(3)]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: GMPXX_LIBRARY
GMPXX_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GMP_INCLUDE_DIR
GMP_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GMP_LIBRARY
GMP_LIBRARY-ADVANCED:INTERNAL=1
//Have includes byteswap.h
HAVE_BYTESWAP_H:INTERNAL=
//Have symbol bswap_16
HAVE_DECL_BSWAP_16:INTERNAL=
//Have symbol bswap_32
HAVE_DECL_BSWAP_32:INTERNAL=
//Have symbol bswap_64
HAVE_DECL_BSWAP_64:INTERNAL=
//Have symbol daemon
HAVE_DECL_DAEMON:INTERNAL=
//Have symbol EVP_MD_CTX_new
HAVE_DECL_EVP_MD_CTX_NEW:INTERNAL=
//Have symbol strnlen
HAVE_DECL_STRNLEN:INTERNAL=1
//Have symbol __builtin_clz
HAVE_DECL___BUILTIN_CLZ:INTERNAL=1
//Have symbol __builtin_clzl
HAVE_DECL___BUILTIN_CLZL:INTERNAL=1
//Have symbol __builtin_clzll
HAVE_DECL___BUILTIN_CLZLL:INTERNAL=1
//Have includes endian.h
HAVE_ENDIAN_H:INTERNAL=
//Result of TRY_COMPILE
HAVE_SIZEOF___INT128:INTERNAL=TRUE
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have includes sys/endian.h
HAVE_SYS_ENDIAN_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include atomic
LEVELDB_ATOMIC_PRESENT:INTERNAL=1
//ADVANCED property for variable: OPENSSL_CRYPTO_LIBRARY
OPENSSL_CRYPTO_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_INCLUDE_DIR
OPENSSL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_SSL_LIBRARY
OPENSSL_SSL_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(__int128)
SIZEOF___INT128:INTERNAL=16
//Test USE_ASM_X86_64
USE_ASM_X86_64:INTERNAL=
_OPENSSL_CFLAGS:INTERNAL=
_OPENSSL_CFLAGS_I:INTERNAL=
_OPENSSL_CFLAGS_OTHER:INTERNAL=
_OPENSSL_FOUND:INTERNAL=
_OPENSSL_INCLUDEDIR:INTERNAL=
_OPENSSL_LIBDIR:INTERNAL=
_OPENSSL_LIBS:INTERNAL=
_OPENSSL_LIBS_L:INTERNAL=
_OPENSSL_LIBS_OTHER:INTERNAL=
_OPENSSL_LIBS_PATHS:INTERNAL=
_OPENSSL_MODULE_NAME:INTERNAL=
_OPENSSL_PREFIX:INTERNAL=
_OPENSSL_STATIC_CFLAGS:INTERNAL=
_OPENSSL_STATIC_CFLAGS_I:INTERNAL=
_OPENSSL_STATIC_CFLAGS_OTHER:INTERNAL=
_OPENSSL_STATIC_LIBDIR:INTERNAL=
_OPENSSL_STATIC_LIBS:INTERNAL=
_OPENSSL_STATIC_LIBS_L:INTERNAL=
_OPENSSL_STATIC_LIBS_OTHER:INTERNAL=
_OPENSSL_STATIC_LIBS_PATHS:INTERNAL=
_OPENSSL_VERSION:INTERNAL=
_OPENSSL_openssl_INCLUDEDIR:INTERNAL=
_OPENSSL_openssl_LIBDIR:INTERNAL=
_OPENSSL_openssl_PREFIX:INTERNAL=
_OPENSSL_openssl_VERSION:INTERNAL=
__pkg_config_checked__OPENSSL:INTERNAL=1
//ADVANCED property for variable: boost_atomic_DIR
boost_atomic_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: boost_chrono_DIR
boost_chrono_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: boost_filesystem_DIR
boost_filesystem_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: boost_headers_DIR
boost_headers_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: boost_program_options_DIR
boost_program_options_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: boost_thread_DIR
boost_thread_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: boost_unit_test_framework_DIR
boost_unit_test_framework_DIR-ADVANCED:INTERNAL=1

